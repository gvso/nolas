"""add_oauth2_tables

Revision ID: 15ada7a3d470
Revises: 39d1e40266ea
Create Date: 2025-07-10 19:36:18.082106

"""

from typing import Sequence, Union

import sqlalchemy as sa
from alembic import op
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = "15ada7a3d470"
down_revision: Union[str, Sequence[str], None] = "39d1e40266ea"
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "oauth2_authorization_requests",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("app_id", sa.BigInteger(), nullable=False),
        sa.Column("client_id", sa.String(length=255), nullable=False),
        sa.Column("account_id", sa.Integer(), nullable=False),
        sa.Column("redirect_uri", sa.String(length=500), nullable=False),
        sa.Column("state", sa.String(length=255), nullable=False),
        sa.Column("scope", sa.String(length=255), nullable=True),
        sa.Column("status", sa.String(length=50), server_default="pending", nullable=False),
        sa.Column("code", sa.String(length=255), nullable=False),
        sa.Column("code_used", sa.Boolean(), nullable=False),
        sa.Column("expires_at", sa.DateTime(timezone=True), nullable=False),
        sa.Column(
            "request_metadata", postgresql.JSONB(astext_type=sa.Text()), server_default=sa.text("'{}'"), nullable=False
        ),
        sa.Column("uuid", sa.UUID(), server_default=sa.text("uuid_generate_v4()"), nullable=False),
        sa.Column("created_at", sa.DateTime(timezone=True), server_default=sa.text("now()"), nullable=False),
        sa.Column("updated_at", sa.DateTime(timezone=True), server_default=sa.text("now()"), nullable=False),
        sa.ForeignKeyConstraint(
            ["account_id"],
            ["accounts.id"],
        ),
        sa.ForeignKeyConstraint(
            ["app_id"],
            ["apps.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(
        op.f("ix_oauth2_authorization_requests_account_id"),
        "oauth2_authorization_requests",
        ["account_id"],
        unique=False,
    )
    op.create_index(
        op.f("ix_oauth2_authorization_requests_app_id"), "oauth2_authorization_requests", ["app_id"], unique=False
    )
    op.create_index(
        op.f("ix_oauth2_authorization_requests_code"), "oauth2_authorization_requests", ["code"], unique=True
    )
    op.create_index(
        op.f("ix_oauth2_authorization_requests_uuid"), "oauth2_authorization_requests", ["uuid"], unique=False
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f("ix_oauth2_authorization_requests_uuid"), table_name="oauth2_authorization_requests")
    op.drop_index(op.f("ix_oauth2_authorization_requests_app_id"), table_name="oauth2_authorization_requests")
    op.drop_index(op.f("ix_oauth2_authorization_requests_account_id"), table_name="oauth2_authorization_requests")
    op.drop_index(op.f("ix_oauth2_authorization_requests_code"), table_name="oauth2_authorization_requests")
    op.drop_table("oauth2_authorization_requests")
    # ### end Alembic commands ###
